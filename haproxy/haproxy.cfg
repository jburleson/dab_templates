global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/haproxy

	# Load LUA script for handling ACME requests
	lua-load /etc/haproxy/acme-http01-webroot.lua

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3
	tune.ssl.default-dh-param 2048

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
	option 	forwardfor
	option  http-server-close
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend http
	bind *:80
	bind *:443 ssl crt /etc/ssl/haproxy/pem/
	mode http

	# Add header if this is a HTTPS connection
	http-request set-header X-Forwarded-Proto https if { ssl_fc }

	# If this is status.check.localhost, provide a 200 response
	acl is_status_check hdr(host) -i status.check.localhost
	use_backend status-check if is_status_check

	# For ACME validation, redirect to the LUA validation script
	acl url_acme_http01 path_beg /.well-known/acme-challenge/
	http-request use-service lua.acme-http01 if METH_GET url_acme_http01

	# Detect websockets
	acl is_websocket hdr(Upgrade) -i WebSocket

	# Redirect to HTTPS
	redirect scheme https code 301 if !{ ssl_fc } !is_status_check

	default_backend web-server

backend web-server
	mode http
	balance leastconn
	option httpclose
	server www1 10.0.0.1:80 check

backend status-check
	mode http
	http-request set-log-level silent
	errorfile 503 /etc/haproxy/errors/200.http
